{"version":3,"sources":["components/NavBar.js","components/Chart.js","components/StatisticsMenu.js","components/Statistics.js","components/Diagnostic.js","components/Porter.js","AxiosApi.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","renderLogout","props","isLooged","className","onClick","handleLogout","bind","this","onLogOut","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Chart","state","selectedChart","data","labels","datasets","label","fill","backgroundColor","borderColor","borderDashOffset","pointBackgroundColor","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","numbers","options","scales","yAxes","display","ticks","beginAtZero","suggestedMax","responsive","redraw","StatisticsMenu","handleChange","event","setState","target","value","typeOfChart","handleSubmit","selectChart","activeChart","onMouseEnter","Statistics","onChartSelect","length","self","forceUpdate","now","Date","date1","date2","console","log","getFullYear","getMonth","getDay","earlyDate","lateDate","URL","toISOString","axios","get","headers","localStorage","getItem","timeout","then","response","i","push","forEach","element","time","getHours","parseInt","quantity","catch","error","onDateChange","firstDate","secondDate","UnstandardizedDateRender","htmlFor","onChange","handleDateChangeFirst","handleDateChangeSecond","dates","chartType","Diagnostic","connectionCharacter","camera1Character","routerConnectionCharacter","isWorking","checkSystem","info","setInfo","Porter","handleChangeFrom","from","valueAsDate","handleChangeTo","to","getMinutes","number","reduce","total","item","s","baseURL","axiosInstance","create","interceptors","use","originalRequest","config","status","url","window","location","Promise","reject","code","statusText","refreshToken","tokenParts","JSON","parse","atob","split","Math","ceil","exp","post","refresh","setItem","access","defaults","err","Login","email","password","handleSubmitWThen","name","preventDefault","result","jwt","jwtData","decodedJwtJsonData","decodedJwtData","user_email","role","onLogIn","onSubmit","App","logIn","render","match","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.37741d59.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass NavBar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n        this.renderLogout = this.renderLogout.bind(this);\r\n    }\r\n\r\n    async handleLogout() {\r\n        this.props.onLogOut();\r\n    };\r\n\r\n    renderLogout = () => {\r\n        if (this.props.isLooged){\r\n            return(\r\n                //<div class=\"text-right\">\r\n                    <button className=\"btn btn-primary nav-item\" onClick={this.handleLogout}>Wyloguj</button>\r\n                //</div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <a className=\"navbar-brand\" href=\"/\">System liczenia frekwencji</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        {/* <li className=\"nav-item\"><Link to=\"./login\">Logowanie</Link></li> */}\r\n                        {this.renderLogout()}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nexport class Chart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            type: this.props.selectedChart,\r\n            data: {\r\n                labels: props.labels,\r\n                datasets: [\r\n                    {\r\n                        label: 'Liczba osób',\r\n                        fill: true,\r\n                        backgroundColor: 'rgba(220,20,60,0.4)',\r\n                        borderColor: 'rgba(220,20,60,1)',\r\n                        borderDashOffset: 0.0,\r\n                        pointBackgroundColor: '#fff',\r\n                        pointHoverRadius: 5,\r\n                        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                        pointHoverBorderColor: '#000',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 4,\r\n                        pointHitRadius: 5,\r\n                        data: props.numbers\r\n                    }\r\n                ],\r\n            },\r\n            options: {\r\n                scales: {\r\n                    yAxes: [{\r\n                        display: true,\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                            suggestedMax: 100,\r\n                        }\r\n                    }]\r\n                },\r\n                responsive: true\r\n            }\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Line data={this.state.data} options={this.state.options} redraw />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chart;","import React, { Component } from \"react\";\r\n\r\nclass StatisticsMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedChart: null,\r\n            typeOfChart: 'today',\r\n            activeChart: 'wybranego zakresu. W celu wybrania, kliknij jedną z poniższych opcji'\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            selectedChart: event.target.value,\r\n            typeOfChart: event.target.id\r\n        });\r\n        //this.props.onDateChange(this.state.)\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.props.selectChart(this.state.typeOfChart)\r\n        this.setState({\r\n            activeChart: this.state.selectedChart\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"list-group\">\r\n                <div className=\"card text-white bg-primary mb-3\">\r\n                    <div className=\"card-header\">Statystyki z {this.state.activeChart}</div>\r\n                </div>\r\n\r\n                <button id=\"today\" value='dzisiaj' onClick={this.handleSubmit} onMouseEnter={this.handleChange} className=\"list-group-item list-group-item-action\">Statystyki z dzisiaj</button>\r\n                <button id=\"yesterday\" value='wczoraj' onClick={this.handleSubmit} onMouseEnter={this.handleChange} className=\"list-group-item list-group-item-action\">Statystyki z wczoraj</button>\r\n                <button id=\"week\" value='tygodnia' onClick={this.handleSubmit} onMouseEnter={this.handleChange} className=\"list-group-item list-group-item-action\">Statystyki z ostatniego tygodnia</button>\r\n                <button id=\"month\" value='miesiąca' onClick={this.handleSubmit} onMouseEnter={this.handleChange} className=\"list-group-item list-group-item-action\">Statystyki z ostatniego miesiąca</button>\r\n                {/* <button id=\"year\" value='roku' onClick={this.handleSubmit} onMouseEnter={this.handleChange} className=\"list-group-item list-group-item-action\">Statystyki z roku</button> */}\r\n                {/* <button id=\"all\" value='całego okresu' onClick={this.handleSubmit} onMouseEnter={this.handleChange} className=\"list-group-item list-group-item-action\">Statystyki z całego okresu</button> */}\r\n                <button id=\"unstandardized\" value='okersu niestandardowego' onClick={this.handleSubmit} onMouseEnter={this.handleChange} className=\"list-group-item list-group-item-action\">Statystyki z okresu niestandardowego</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatisticsMenu;","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport Chart from './Chart'\r\nimport StatisticsMenu from './StatisticsMenu';\r\n\r\nlet numbers = [];\r\nlet labels = [];\r\n\r\nexport class Statistics extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedChart: 'today',\r\n            earlyDate: 0,\r\n            lateDate: 0,\r\n            quantity: [],\r\n            dates: []\r\n        };\r\n\r\n        this.onChartSelect = this.onChartSelect.bind(this);\r\n        this.onDateChange = this.onDateChange.bind(this);\r\n        this.handleDateChangeFirst = this.handleDateChangeFirst.bind(this);\r\n        this.handleDateChangeSecond = this.handleDateChangeSecond.bind(this);\r\n    }\r\n\r\n    onChartSelect = (selectedChart) => {\r\n        numbers.length = 0;   \r\n        labels.length = 0;\r\n        const self = this;\r\n        self.forceUpdate();\r\n        let now = new Date();\r\n        let date1 = new Date();\r\n        let date2 = new Date();\r\n\r\n        if (selectedChart === 'today') {\r\n            console.log(\"today\")\r\n            date1 = new Date(now.getFullYear(), now.getMonth(), now.getDay(), 0, 0, 0);\r\n            date2 = new Date(now.getFullYear(), now.getMonth(), now.getDay(), 23, 59, 59);\r\n            //console.log(date1)\r\n            //console.log(date2)\r\n        } else if (selectedChart === 'yesterday'){\r\n            console.log(\"yesterday\")\r\n            date1 = new Date(now.getFullYear(), now.getMonth(), now.getDay() - 1, 0, 0, 0);\r\n            date2 = new Date(now.getFullYear(), now.getMonth(), now.getDay() - 1, 23, 59, 59);\r\n            //console.log(date1)\r\n            //console.log(date2)\r\n        } else if (selectedChart === 'week'){\r\n            console.log(\"week\")\r\n            date1 = new Date(now.getFullYear(), now.getMonth(), now.getDay() - 7, 0, 0, 0);\r\n            date2 = new Date(now.getFullYear(), now.getMonth(), now.getDay(), 23, 59, 59);\r\n            //console.log(date1)\r\n            //console.log(date2)\r\n        } else if (selectedChart === 'month'){\r\n            console.log(\"month\")\r\n            date1 = new Date(now.getFullYear(), now.getMonth(), now.getDay() - 30, 0, 0, 0);\r\n            date2 = new Date(now.getFullYear(), now.getMonth(), now.getDay(), 23, 59, 59);\r\n            //console.log(date1)\r\n            //console.log(date2)\r\n        } else if (selectedChart === 'unstandardized'){\r\n            console.log(\"unstandardized\")\r\n            date1 = new Date(this.state.earlyDate);\r\n            date2 = new Date(this.state.lateDate);\r\n            //console.log(this.state.earlyDate)\r\n            //console.log(date2)\r\n        }\r\n\r\n        const URL = 'https://system-liczenia-frekwencji.herokuapp.com/api/entrances/?start=' + date1.toISOString() + '&end=' + date2.toISOString();\r\n        axios.get(URL, { headers: {\"Authorization\" : 'JWT ' + localStorage.getItem('access_token')} }, { timeout: 180000})\r\n            .then(function (response) { \r\n                console.log(response)\r\n                numbers.length = 0;   \r\n                labels.length = 0;\r\n                const length = 24;\r\n                for(var i = 0; i < length; i++) {numbers.push(0);}\r\n                for(var i = 0; i < length; i++) {labels.push(i + ':00');}\r\n\r\n                response.data.forEach(element => {\r\n                    numbers[new Date(element.time).getHours()] = numbers[parseInt(new Date(element.time).getHours(), 10)] += parseInt(element.quantity, 10);\r\n                });\r\n\r\n                self.forceUpdate();\r\n                \r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n            this.setState({\r\n                selectedChart\r\n            }); \r\n    }\r\n\r\n    onDateChange = (firstDate, secondDate) => {\r\n        this.setState({\r\n            earlyDate: firstDate,\r\n            lateDate: secondDate\r\n        });\r\n        //console.log(this.state.earlyDate)\r\n        //console.log(this.state.lateDate)\r\n    }\r\n\r\n    UnstandardizedDateRender = () => {\r\n        return(\r\n            <div className=\"row justify-content-around\">\r\n                <div className=\"col-7 input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Od:</label>\r\n                    </div>\r\n                    <input type=\"date\" onChange={this.handleDateChangeFirst.bind(this)}></input>\r\n                </div>\r\n\r\n                <div className=\"col-7 input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <label className=\"input-group-text\" htmlFor=\"inputGroupSelect02\">Do:</label>\r\n                    </div>\r\n                    <input type=\"date\" onChange={this.handleDateChangeSecond.bind(this)}></input>\r\n                </div>\r\n            </div> \r\n        );\r\n    }\r\n\r\n    handleDateChangeFirst = (event) => {\r\n        this.setState({\r\n            earlyDate: event.target.value\r\n        });\r\n        console.log(this.state.earlyDate)\r\n        this.onChartSelect(\"unstandardized\")\r\n    }\r\n\r\n    handleDateChangeSecond = (event) => {\r\n        this.setState({\r\n            lateDate: event.target.value\r\n        });\r\n        console.log(this.state.lateDate)\r\n        this.onChartSelect(\"unstandardized\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-around\">\r\n                    <div className=\"col-3\">\r\n                        <StatisticsMenu chartType={this.state.chartType} selectChart={this.onChartSelect}/>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        {this.state.selectedChart === 'unstandardized' && this.UnstandardizedDateRender()}\r\n                        <br></br>\r\n                        <Chart labels={labels} numbers={numbers} selectedChart={this.props.selectedChart} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Statistics;","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n\r\nclass Diagnostic extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connectionCharacter: \" \",\r\n            camera1Character: \" \",\r\n            routerConnectionCharacter: \" \",\r\n            isWorking: false\r\n        };\r\n\r\n        this.checkSystem = this.checkSystem.bind(this);\r\n    }\r\n\r\n    setInfo(info) {\r\n        if (info == 's') {\r\n            return (<div><span className=\"badge badge-success badge-pill\">Działa poprawnie</span></div>);\r\n        } else if (info == 'w'){\r\n            return (<span className=\"badge badge-warning badge-pill\">W trakcie sprawdzania</span>);\r\n        } else if (info == 'd'){\r\n            return (<span className=\"badge badge-danger badge-pill\">Wystąpił błąd</span>);\r\n        } else {\r\n            return (<span className=\"badge badge-warning badge-pill\">..</span>);\r\n        }\r\n    }\r\n\r\n    checkSystem() {\r\n        this.setState({\r\n            connectionCharacter: 'w',\r\n            camera1Character: 'w',\r\n            routerConnectionCharacter: 'w'\r\n        });\r\n        \r\n        var self = this;\r\n        axios.get('https://system-liczenia-frekwencji.herokuapp.com/api/service/connectivity', { headers: {\"Authorization\" : 'JWT ' + localStorage.getItem('access_token')} })\r\n            .then(function (response) {\r\n                if (response.data.isWorking) {\r\n                    self.setState({\r\n                        connectionCharacter: 's',\r\n                        camera1Character: 's',\r\n                        routerConnectionCharacter: 's'\r\n                    });\r\n                } else {\r\n                    self.setState({\r\n                        connectionCharacter: 's',\r\n                        camera1Character: 'd',\r\n                        routerConnectionCharacter: 's'\r\n                    });\r\n                    \r\n                }\r\n                console.log(this.state.routerConnectionCharacter);\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n        \r\n        if (this.state.connectionCharacter != 's') {\r\n            self.setState({\r\n                connectionCharacter: 'd',\r\n                camera1Character: 'd',\r\n                routerConnectionCharacter: 'd'\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"col-12\">\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                            <h4>Diagnostyka systemu</h4>\r\n                            <button onClick={this.checkSystem} type=\"button\" className=\"btn btn-info\">Rozpocznij test</button>\r\n                        </li>\r\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                            Połączenie z serwerem\r\n                            {this.setInfo(this.state.connectionCharacter)}\r\n                        </li>\r\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                            Połączenie z routerem\r\n                            {this.setInfo(this.state.routerConnectionCharacter)}\r\n                        </li>\r\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                            Połączenie serwera z kamerą\r\n                            {this.setInfo(this.state.camera1Character)}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Diagnostic;","import axios from 'axios';\r\nimport React, { Component } from \"react\";\r\n\r\nclass Porter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            from: '00:00',\r\n            to: '00:00',\r\n            number: '0'\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChangeFrom = this.handleChangeFrom.bind(this);\r\n        this.handleChangeTo = this.handleChangeTo.bind(this);\r\n    }\r\n\r\n    handleChangeFrom = (event) => {\r\n        this.setState({\r\n            from: event.target.valueAsDate\r\n        })\r\n    }\r\n\r\n    handleChangeTo = (event) => {\r\n        this.setState({\r\n            to: event.target.valueAsDate\r\n        })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const self = this;\r\n        let now = new Date();\r\n        \r\n        let date1 = new Date(now.getFullYear(), now.getMonth(), now.getDay() + 7, this.state.from.getHours() + 1, this.state.from.getMinutes());\r\n        let date2 = new Date(now.getFullYear(), now.getMonth(), now.getDay() + 7, this.state.to.getHours() + 1, this.state.to.getMinutes());\r\n        console.log(date1.getFullYear())\r\n        console.log(date1.getMonth())\r\n        console.log(date1.getDay())\r\n        console.log( this.state.from.getHours() + 1)\r\n        console.log( this.state.from.getMinutes())\r\n\r\n        const URL = 'https://system-liczenia-frekwencji.herokuapp.com/api/entrances/?start=' + date1.toISOString() + '&end=' + date2.toISOString();\r\n        axios.get(URL, { headers: {\"Authorization\" : 'JWT ' + localStorage.getItem('access_token')} })\r\n            .then(function (response) {\r\n                let number = response.data.reduce((total, item) => {\r\n                    return item.quantity + total\r\n                }, 0)\r\n                console.log(number);\r\n\r\n                self.setState({\r\n                    number: number\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                self.setState({\r\n                    number: 0\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-md\">\r\n                <div className=\"row justify-content-around\">\r\n                    <div className=\"col-12 input-group justify-content-center\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <label className=\"input-group-text\" htmlFor=\"inputGroupSelect02\">Od:</label>\r\n                        </div>\r\n                        <input type=\"time\" onChange={this.handleChangeFrom}></input>\r\n                    </div>\r\n                    <div className=\"col-12 input-group justify-content-center\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <label s=\"input-group-text\" htmlFor=\"inputGroupSelect02\">Do:</label>\r\n                        </div>\r\n                        <input type=\"time\" onChange={this.handleChangeTo}></input>\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"row justify-content-around\">\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSubmit}>Sprawdź</button>\r\n                </div>\r\n                <hr></hr>\r\n                <div className=\"row justify-content-around\">\r\n                    <div className=\"alert alert-dismissible alert-info\">\r\n                        <strong>Liczba osób wykrytych przez kamerę:</strong><br></br>\r\n                        <h3>{this.state.number}</h3>\r\n                    </div>\r\n                </div>\r\n                <hr></hr>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Porter;","import axios from 'axios'\r\n\r\nconst baseURL = 'https://system-liczenia-frekwencji.herokuapp.com/auth/'\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: baseURL,\r\n    timeout: 5000,\r\n    headers: {\r\n        'Authorization': localStorage.getItem('access_token') ? \"JWT \" + localStorage.getItem('access_token') : null,\r\n        'Content-Type': 'application/json',\r\n        'accept': 'application/json'\r\n    }\r\n});\r\n\r\n\r\naxiosInstance.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n        const originalRequest = error.config;\r\n\r\n        // Prevent infinite loops early\r\n        if (error.response.status === 401 && originalRequest.url === baseURL+'token/refresh/') {\r\n            window.location.href = '/login/';\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        if (error.response.data.code === \"token_not_valid\" &&\r\n            error.response.status === 401 && \r\n            error.response.statusText === \"Unauthorized\") \r\n            {\r\n                const refreshToken = localStorage.getItem('refresh_token');\r\n\r\n                if (refreshToken){\r\n                    const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n\r\n                    // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n                    const now = Math.ceil(Date.now() / 1000);\r\n                    console.log(tokenParts.exp);\r\n\r\n                    if (tokenParts.exp > now) {\r\n                        return axiosInstance\r\n                        .post('/token/refresh/', {refresh: refreshToken})\r\n                        .then((response) => {\r\n            \r\n                            localStorage.setItem('access_token', response.data.access);\r\n                            localStorage.setItem('refresh_token', response.data.refresh);\r\n            \r\n                            axiosInstance.defaults.headers['Authorization'] = \"JWT \" + response.data.access;\r\n                            originalRequest.headers['Authorization'] = \"JWT \" + response.data.access;\r\n            \r\n                            return axiosInstance(originalRequest);\r\n                        })\r\n                        .catch(err => {\r\n                            console.log(err)\r\n                        });\r\n                    }else{\r\n                        console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n                        window.location.href = '/login/';\r\n                    }\r\n                }else{\r\n                    console.log(\"Refresh token not available.\")\r\n                    window.location.href = '/login/';\r\n                }\r\n        }\r\n      \r\n     \r\n      // specific error handling done elsewhere\r\n      return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance","import React, { Component } from \"react\";\r\nimport axiosInstance from \"../AxiosApi\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {email: \"\", password: \"\"};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleSubmitWThen = this.handleSubmitWThen.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleSubmitWThen(event){\r\n        event.preventDefault();\r\n        axiosInstance.post('/token/obtain/', {\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            }).then(\r\n                result => {\r\n                    axiosInstance.defaults.headers['Authorization'] = \"JWT \" + result.data.access;\r\n                    localStorage.setItem('access_token', result.data.access);\r\n                    localStorage.setItem('refresh_token', result.data.refresh);\r\n                }\r\n            ).catch (error => {\r\n                throw error;\r\n            })\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axiosInstance.post('/token/obtain/', {\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            });\r\n            axiosInstance.defaults.headers['Authorization'] = \"JWT \" + response.data.access;\r\n            localStorage.setItem('access_token', response.data.access);\r\n            localStorage.setItem('refresh_token', response.data.refresh);\r\n\r\n            let jwt = localStorage.getItem('access_token');\r\n            let jwtData = jwt.split('.')[1];\r\n            let decodedJwtJsonData = window.atob(jwtData);\r\n            let decodedJwtData = JSON.parse(decodedJwtJsonData);\r\n\r\n            let email = decodedJwtData.user_email;\r\n            let role = email.split('@')[0];\r\n            localStorage.setItem('role', role);\r\n            this.props.onLogIn(true, role);\r\n\r\n            return response;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Ekran Logowania</h3>\r\n                <form className=\"form-group\" onSubmit={this.handleSubmit}>\r\n                    <label className=\"control-label\">Login:</label>    \r\n                    <input className=\"form-control\" name=\"email\" type=\"text\" value={this.state.email} onChange={this.handleChange}/>\r\n                    \r\n                    <label className=\"control-label\">Hasło:</label>\r\n                    <input className=\"form-control\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                    <br></br>\r\n                    <input className=\"btn btn-primary\" type=\"submit\" value=\"Zaloguj\"/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar';\r\nimport Statistics from './components/Statistics';\r\nimport Diagnostic from './components/Diagnostic';\r\nimport Porter from './components/Porter';\r\nimport Login from './components/Login';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      logIn: false,\r\n      role: 'non'\r\n      };\r\n    }\r\n\r\n  componentDidMount() {\r\n    this.setState({ logIn: false});\r\n  }\r\n\r\n  onLogIn = (status, type) => {\r\n    if (status) {\r\n      this.setState({\r\n        logIn: status,\r\n        role: type\r\n      });\r\n      this.forceUpdate();\r\n    }\r\n    else {\r\n      this.setState({\r\n        logIn: status,\r\n        role: type\r\n      });\r\n    }\r\n}\r\n\r\nonLogOut = () => {\r\n  this.setState({\r\n    logIn: false,\r\n    role: \"non\"\r\n  });\r\n}\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <NavBar isLooged={this.state.logIn} onLogOut={this.onLogOut}/>\r\n          <div className=\"row justify-content-around\">\r\n            <Switch>\r\n              <Route render={\r\n                ({match}) => {\r\n                  if(this.state.logIn) {\r\n                    if (this.state.role == 'analityk') {\r\n                      return (<Statistics\r\n                        labels={[\"Dzień 1\", \"Dzień 2\", \"Dzień 3\", \"Dzień 4\", \"Dzień 5\", \"Dzień 6\", \"Dzień 7\"]}\r\n                        numbers={[35, 48, 60, 54, 56, 83, 42]}\r\n                        type={\"D\"} />)\r\n                    }\r\n                    if (this.state.role == 'technik') {\r\n                      return (<Diagnostic/>)\r\n                    }\r\n                    if (this.state.role == 'portier') {\r\n                      return (<Porter/>)\r\n                    }\r\n                  }\r\n                  else {\r\n                    return (<Login onLogIn={this.onLogIn}/>);\r\n                  }\r\n                }\r\n              }/>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}