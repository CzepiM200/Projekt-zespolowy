{"version":3,"sources":["components/NavBar.js","components/Chart.js","components/StatisticsMenu.js","components/UnstandardizedDate.js","components/Statistics.js","components/Diagnostic.js","components/Porter.js","AxiosApi.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","renderLogout","props","isLooged","className","onClick","handleLogout","bind","this","onLogOut","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Chart","state","selectedChart","data","labels","datasets","label","fill","backgroundColor","borderColor","borderDashOffset","pointBackgroundColor","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","numbers","options","scales","yAxes","display","ticks","beginAtZero","suggestedMax","responsive","redraw","StatisticsMenu","handleChange","event","setState","target","value","typeOfChart","handleSubmit","selectChart","activeChart","onMouseEnter","UnstandardizedDate","handleDateChangeFirst","firstDate","console","log","handleDateChangeSecond","secondDate","Date","htmlFor","onChange","Statistics","onChartSelect","length","self","forceUpdate","now","date1","date2","getFullYear","getMonth","getDay","URL","toISOString","axios","get","headers","localStorage","getItem","timeout","then","response","i","push","forEach","element","time","getHours","parseInt","quantity","catch","error","onDateChange","earlyDate","lateDate","UnstandardizedDateRender","dates","chartType","Diagnostic","connectionCharacter","camera1Character","routerConnectionCharacter","isWorking","checkSystem","info","setInfo","Porter","handleChangeFrom","from","valueAsDate","handleChangeTo","to","getMinutes","number","reduce","total","item","s","baseURL","axiosInstance","create","interceptors","use","originalRequest","config","status","url","window","location","Promise","reject","code","statusText","refreshToken","tokenParts","JSON","parse","atob","split","Math","ceil","exp","post","refresh","setItem","access","defaults","err","Login","email","password","handleSubmitWThen","name","preventDefault","result","jwt","jwtData","decodedJwtJsonData","decodedJwtData","user_email","role","onLogIn","onSubmit","App","logIn","render","match","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4d68652c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass NavBar extends Component {\r\n    constructor() {\r\n        super();\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n        this.renderLogout = this.renderLogout.bind(this);\r\n    }\r\n\r\n    async handleLogout() {\r\n        this.props.onLogOut();\r\n    };\r\n\r\n    renderLogout = () => {\r\n        if (this.props.isLooged){\r\n            return(\r\n                //<div class=\"text-right\">\r\n                    <button className=\"btn btn-primary nav-item\" onClick={this.handleLogout}>Wyloguj</button>\r\n                //</div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <a className=\"navbar-brand\" href=\"/\">System liczenia frekwencji</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        {/* <li className=\"nav-item\"><Link to=\"./login\">Logowanie</Link></li> */}\r\n                        {this.renderLogout()}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nexport class Chart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            type: this.props.selectedChart,\r\n            data: {\r\n                labels: props.labels,\r\n                datasets: [\r\n                    {\r\n                        label: 'Liczba osób',\r\n                        fill: true,\r\n                        backgroundColor: 'rgba(220,20,60,0.4)',\r\n                        borderColor: 'rgba(220,20,60,1)',\r\n                        borderDashOffset: 0.0,\r\n                        pointBackgroundColor: '#fff',\r\n                        pointHoverRadius: 5,\r\n                        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                        pointHoverBorderColor: '#000',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 4,\r\n                        pointHitRadius: 5,\r\n                        data: props.numbers\r\n                    }\r\n                ],\r\n            },\r\n            options: {\r\n                scales: {\r\n                    yAxes: [{\r\n                        display: true,\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                            suggestedMax: 100,\r\n                        }\r\n                    }]\r\n                },\r\n                responsive: true\r\n            }\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Line data={this.state.data} options={this.state.options} redraw />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chart;","import React, { Component } from \"react\";\r\n\r\nclass StatisticsMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedChart: null,\r\n            typeOfChart: 'today',\r\n            activeChart: 'wybranego zakresu. W celu wybrania, kliknij jedną z poniższych opcji'\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            selectedChart: event.target.value,\r\n            typeOfChart: event.target.id\r\n        });\r\n        //this.props.onDateChange(this.state.)\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.props.selectChart(this.state.typeOfChart)\r\n        this.setState({\r\n            activeChart: this.state.selectedChart\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"list-group\">\r\n                <div className=\"card text-white bg-primary mb-3\">\r\n                    <div className=\"card-header\">Statystyki z {this.state.activeChart}</div>\r\n                </div>\r\n\r\n                <button id=\"today\" value='dzisiaj' onClick={this.handleSubmit} onMouseEnter={this.handleChange} className=\"list-group-item list-group-item-action\">Statystyki z dzisiaj</button>\r\n                <button id=\"yesterday\" value='wczoraj' onClick={this.handleSubmit} onMouseEnter={this.handleChange} className=\"list-group-item list-group-item-action\">Statystyki z wczoraj</button>\r\n                <button id=\"week\" value='tygodnia' onClick={this.handleSubmit} onMouseEnter={this.handleChange} className=\"list-group-item list-group-item-action\">Statystyki z ostatniego tygodnia</button>\r\n                <button id=\"month\" value='miesiąca' onClick={this.handleSubmit} onMouseEnter={this.handleChange} className=\"list-group-item list-group-item-action\">Statystyki z ostatniego miesiąca</button>\r\n                {/* <button id=\"year\" value='roku' onClick={this.handleSubmit} onMouseEnter={this.handleChange} className=\"list-group-item list-group-item-action\">Statystyki z roku</button> */}\r\n                {/* <button id=\"all\" value='całego okresu' onClick={this.handleSubmit} onMouseEnter={this.handleChange} className=\"list-group-item list-group-item-action\">Statystyki z całego okresu</button> */}\r\n                <button id=\"unstandardized\" value='okersu niestandardowego' onClick={this.handleSubmit} onMouseEnter={this.handleChange} className=\"list-group-item list-group-item-action\">Statystyki z okresu niestandardowego</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatisticsMenu;","import React, { Component } from 'react';\r\n\r\nexport class UnstandardizedDate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstDate: new Date(),\r\n            secondDate: new Date()\r\n        };\r\n\r\n        this.handleDateChangeFirst = this.handleDateChangeFirst.bind(this);\r\n        this.handleDateChangeSecond = this.handleDateChangeSecond.bind(this);\r\n    }\r\n\r\n    handleDateChangeFirst = (event) => {\r\n        this.setState({\r\n            firstDate: event.target.value\r\n        });\r\n        console.log(this.state.firstDate)\r\n    }\r\n\r\n    handleDateChangeSecond = (event) => {\r\n        this.setState({\r\n            secondDate: event.target.value\r\n        });\r\n        console.log(event.target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-around\">\r\n                <div className=\"col-6 input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Od:</label>\r\n                    </div>\r\n                    <input type=\"date\" onChange={this.handleDateChangeFirst.bind(this)}></input>\r\n                </div>\r\n\r\n                <div className=\"col-6 input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <label className=\"input-group-text\" htmlFor=\"inputGroupSelect02\">Do:</label>\r\n                    </div>\r\n                    <input type=\"date\" onChange={this.handleDateChangeSecond.bind(this)}></input>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UnstandardizedDate;","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport Chart from './Chart'\r\nimport StatisticsMenu from './StatisticsMenu';\r\nimport UnstandardizedDate from './UnstandardizedDate';\r\n\r\nlet numbers = [];\r\nlet labels = [];\r\n\r\nexport class Statistics extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedChart: 'today',\r\n            earlyDate: 0,\r\n            lateDate: 0,\r\n            quantity: [],\r\n            dates: []\r\n        };\r\n\r\n        this.onChartSelect = this.onChartSelect.bind(this);\r\n    }\r\n\r\n    onChartSelect = (selectedChart) => {\r\n        numbers.length = 0;   \r\n        labels.length = 0;\r\n        const self = this;\r\n        self.forceUpdate();\r\n        let now = new Date();\r\n        let date1 = new Date();\r\n        let date2 = new Date();\r\n\r\n        if (selectedChart === 'today') {\r\n            console.log(\"today\")\r\n            date1 = new Date(now.getFullYear(), now.getMonth(), now.getDay(), 0, 0, 0);\r\n            date2 = new Date(now.getFullYear(), now.getMonth(), now.getDay(), 23, 59, 59);\r\n            //console.log(date1)\r\n            //console.log(date2)\r\n        } else if (selectedChart === 'yesterday'){\r\n            console.log(\"yesterday\")\r\n            date1 = new Date(now.getFullYear(), now.getMonth(), now.getDay() - 1, 0, 0, 0);\r\n            date2 = new Date(now.getFullYear(), now.getMonth(), now.getDay() - 1, 23, 59, 59);\r\n            //console.log(date1)\r\n            //console.log(date2)\r\n        } else if (selectedChart === 'week'){\r\n            console.log(\"week\")\r\n            date1 = new Date(now.getFullYear(), now.getMonth(), now.getDay() - 7, 0, 0, 0);\r\n            date2 = new Date(now.getFullYear(), now.getMonth(), now.getDay(), 23, 59, 59);\r\n            //console.log(date1)\r\n            //console.log(date2)\r\n        } else if (selectedChart === 'month'){\r\n            console.log(\"month\")\r\n            date1 = new Date(now.getFullYear(), now.getMonth(), now.getDay() - 30, 0, 0, 0);\r\n            date2 = new Date(now.getFullYear(), now.getMonth(), now.getDay(), 23, 59, 59);\r\n            //console.log(date1)\r\n            //console.log(date2)\r\n        } else if (selectedChart === 'year'){\r\n            console.log(\"year\")\r\n            date1 = new Date(now.getFullYear(), now.getMonth(), now.getDay() - 365, 0, 0, 0);\r\n            date2 = new Date(now.getFullYear(), now.getMonth(), now.getDay(), 23, 59, 59);\r\n            //console.log(date1)\r\n            //console.log(date2)\r\n        } else if (selectedChart === 'all'){\r\n            console.log(\"all\")\r\n            date1 = new Date(now.getFullYear(), now.getMonth(), now.getDay() - 1000, 0, 0, 0);\r\n            date2 = new Date(now.getFullYear(), now.getMonth(), now.getDay(), 23, 59, 59);\r\n            //console.log(date1)\r\n            //console.log(date2)\r\n        }\r\n\r\n        const URL = 'https://system-liczenia-frekwencji.herokuapp.com/api/entrances/?start=' + date1.toISOString() + '&end=' + date2.toISOString();\r\n        axios.get(URL, { headers: {\"Authorization\" : 'JWT ' + localStorage.getItem('access_token')} }, { timeout: 180000})\r\n            .then(function (response) { \r\n                console.log(response)\r\n                numbers.length = 0;   \r\n                labels.length = 0;\r\n                const length = 24;\r\n                for(var i = 0; i < length; i++) {numbers.push(0);}\r\n                for(var i = 0; i < length; i++) {labels.push(i + ':00');}\r\n\r\n                response.data.forEach(element => {\r\n                    numbers[new Date(element.time).getHours()] = numbers[parseInt(new Date(element.time).getHours(), 10)] += parseInt(element.quantity, 10);\r\n                });\r\n\r\n                self.forceUpdate();\r\n                \r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n            this.setState({\r\n                selectedChart\r\n            }); \r\n    }\r\n\r\n    onDateChange = (firstDate, secondDate) => {\r\n        console.log(firstDate)\r\n        console.log(secondDate)\r\n        this.setState({\r\n            earlyDate: firstDate,\r\n            lateDate: secondDate\r\n        });\r\n    }\r\n\r\n    UnstandardizedDateRender = () => {\r\n        return(\r\n            <div className=\"row justify-content-around\">\r\n                <UnstandardizedDate />\r\n            </div> \r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-around\">\r\n                    <div className=\"col-3\">\r\n                        <StatisticsMenu chartType={this.state.chartType} selectChart={this.onChartSelect} onDateChange={this.onDateChange}/>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        {this.state.selectedChart === 'unstandardized' && this.UnstandardizedDateRender()}\r\n                        {/* <div className=\"row\">\r\n                            <UnstandardizedDate />\r\n                        </div> */}\r\n                        <br></br>\r\n                        <Chart labels={labels} numbers={numbers} selectedChart={this.props.selectedChart} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Statistics;","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n\r\nclass Diagnostic extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            connectionCharacter: \" \",\r\n            camera1Character: \" \",\r\n            routerConnectionCharacter: \" \",\r\n            isWorking: false\r\n        };\r\n\r\n        this.checkSystem = this.checkSystem.bind(this);\r\n    }\r\n\r\n    setInfo(info) {\r\n        if (info == 's') {\r\n            return (<div><span className=\"badge badge-success badge-pill\">Działa poprawnie</span></div>);\r\n        } else if (info == 'w'){\r\n            return (<span className=\"badge badge-warning badge-pill\">W trakcie sprawdzania</span>);\r\n        } else if (info == 'd'){\r\n            return (<span className=\"badge badge-danger badge-pill\">Wystąpił błąd</span>);\r\n        } else {\r\n            return (<span className=\"badge badge-warning badge-pill\">..</span>);\r\n        }\r\n    }\r\n\r\n    checkSystem() {\r\n        this.setState({\r\n            connectionCharacter: 'w',\r\n            camera1Character: 'w',\r\n            routerConnectionCharacter: 'w'\r\n        });\r\n        \r\n        var self = this;\r\n        axios.get('https://system-liczenia-frekwencji.herokuapp.com/api/service/connectivity', { headers: {\"Authorization\" : 'JWT ' + localStorage.getItem('access_token')} })\r\n            .then(function (response) {\r\n                if (response.data.isWorking) {\r\n                    self.setState({\r\n                        connectionCharacter: 's',\r\n                        camera1Character: 's',\r\n                        routerConnectionCharacter: 's'\r\n                    });\r\n                } else {\r\n                    self.setState({\r\n                        connectionCharacter: 's',\r\n                        camera1Character: 'd',\r\n                        routerConnectionCharacter: 's'\r\n                    });\r\n                    \r\n                }\r\n                console.log(this.state.routerConnectionCharacter);\r\n            })\r\n            .catch(function (error) {\r\n            });\r\n        \r\n        if (this.state.connectionCharacter != 's') {\r\n            self.setState({\r\n                connectionCharacter: 'd',\r\n                camera1Character: 'd',\r\n                routerConnectionCharacter: 'd'\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"col-12\">\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                            <h4>Diagnostyka systemu</h4>\r\n                            <button onClick={this.checkSystem} type=\"button\" className=\"btn btn-info\">Rozpocznij test</button>\r\n                        </li>\r\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                            Połączenie z serwerem\r\n                            {this.setInfo(this.state.connectionCharacter)}\r\n                        </li>\r\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                            Połączenie z routerem\r\n                            {this.setInfo(this.state.routerConnectionCharacter)}\r\n                        </li>\r\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                            Połączenie serwera z kamerą\r\n                            {this.setInfo(this.state.camera1Character)}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Diagnostic;","import axios from 'axios';\r\nimport React, { Component } from \"react\";\r\n\r\nclass Porter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            from: '00:00',\r\n            to: '00:00',\r\n            number: '0'\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChangeFrom = this.handleChangeFrom.bind(this);\r\n        this.handleChangeTo = this.handleChangeTo.bind(this);\r\n    }\r\n\r\n    handleChangeFrom = (event) => {\r\n        this.setState({\r\n            from: event.target.valueAsDate\r\n        })\r\n    }\r\n\r\n    handleChangeTo = (event) => {\r\n        this.setState({\r\n            to: event.target.valueAsDate\r\n        })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const self = this;\r\n        let now = new Date();\r\n        let date1 = new Date(now.getFullYear(), now.getMonth(), now.getDay(), this.state.from.getHours() - 1, this.state.from.getMinutes());\r\n        let date2 = new Date(now.getFullYear(), now.getMonth(), now.getDay(), this.state.to.getHours() - 1, this.state.to.getMinutes());\r\n\r\n        const URL = 'https://system-liczenia-frekwencji.herokuapp.com/api/entrances/?start=' + date1.toISOString() + '&end=' + date2.toISOString();\r\n        axios.get(URL, { headers: {\"Authorization\" : 'JWT ' + localStorage.getItem('access_token')} })\r\n            .then(function (response) {\r\n                let number = response.data.reduce((total, item) => {\r\n                    return item.quantity + total\r\n                }, 0)\r\n                console.log(number);\r\n\r\n                self.setState({\r\n                    number: number\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                self.setState({\r\n                    number: 0\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-md\">\r\n                <div className=\"row justify-content-around\">\r\n                    <div className=\"col-12 input-group justify-content-center\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <label className=\"input-group-text\" htmlFor=\"inputGroupSelect02\">Od:</label>\r\n                        </div>\r\n                        <input type=\"time\" onChange={this.handleChangeFrom}></input>\r\n                    </div>\r\n                    <div className=\"col-12 input-group justify-content-center\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <label s=\"input-group-text\" htmlFor=\"inputGroupSelect02\">Do:</label>\r\n                        </div>\r\n                        <input type=\"time\" onChange={this.handleChangeTo}></input>\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"row justify-content-around\">\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSubmit}>Sprawdź</button>\r\n                </div>\r\n                <hr></hr>\r\n                <div className=\"row justify-content-around\">\r\n                    <div className=\"alert alert-dismissible alert-info\">\r\n                        <strong>Liczba osób wykrytych przez kamerę:</strong><br></br>\r\n                        <h3>{this.state.number}</h3>\r\n                    </div>\r\n                </div>\r\n                <hr></hr>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Porter;","import axios from 'axios'\r\n\r\nconst baseURL = 'https://system-liczenia-frekwencji.herokuapp.com/auth/'\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: baseURL,\r\n    timeout: 5000,\r\n    headers: {\r\n        'Authorization': localStorage.getItem('access_token') ? \"JWT \" + localStorage.getItem('access_token') : null,\r\n        'Content-Type': 'application/json',\r\n        'accept': 'application/json'\r\n    }\r\n});\r\n\r\n\r\naxiosInstance.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n        const originalRequest = error.config;\r\n\r\n        // Prevent infinite loops early\r\n        if (error.response.status === 401 && originalRequest.url === baseURL+'token/refresh/') {\r\n            window.location.href = '/login/';\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        if (error.response.data.code === \"token_not_valid\" &&\r\n            error.response.status === 401 && \r\n            error.response.statusText === \"Unauthorized\") \r\n            {\r\n                const refreshToken = localStorage.getItem('refresh_token');\r\n\r\n                if (refreshToken){\r\n                    const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n\r\n                    // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n                    const now = Math.ceil(Date.now() / 1000);\r\n                    console.log(tokenParts.exp);\r\n\r\n                    if (tokenParts.exp > now) {\r\n                        return axiosInstance\r\n                        .post('/token/refresh/', {refresh: refreshToken})\r\n                        .then((response) => {\r\n            \r\n                            localStorage.setItem('access_token', response.data.access);\r\n                            localStorage.setItem('refresh_token', response.data.refresh);\r\n            \r\n                            axiosInstance.defaults.headers['Authorization'] = \"JWT \" + response.data.access;\r\n                            originalRequest.headers['Authorization'] = \"JWT \" + response.data.access;\r\n            \r\n                            return axiosInstance(originalRequest);\r\n                        })\r\n                        .catch(err => {\r\n                            console.log(err)\r\n                        });\r\n                    }else{\r\n                        console.log(\"Refresh token is expired\", tokenParts.exp, now);\r\n                        window.location.href = '/login/';\r\n                    }\r\n                }else{\r\n                    console.log(\"Refresh token not available.\")\r\n                    window.location.href = '/login/';\r\n                }\r\n        }\r\n      \r\n     \r\n      // specific error handling done elsewhere\r\n      return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance","import React, { Component } from \"react\";\r\nimport axiosInstance from \"../AxiosApi\";\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {email: \"\", password: \"\"};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleSubmitWThen = this.handleSubmitWThen.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleSubmitWThen(event){\r\n        event.preventDefault();\r\n        axiosInstance.post('/token/obtain/', {\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            }).then(\r\n                result => {\r\n                    axiosInstance.defaults.headers['Authorization'] = \"JWT \" + result.data.access;\r\n                    localStorage.setItem('access_token', result.data.access);\r\n                    localStorage.setItem('refresh_token', result.data.refresh);\r\n                }\r\n            ).catch (error => {\r\n                throw error;\r\n            })\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axiosInstance.post('/token/obtain/', {\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            });\r\n            axiosInstance.defaults.headers['Authorization'] = \"JWT \" + response.data.access;\r\n            localStorage.setItem('access_token', response.data.access);\r\n            localStorage.setItem('refresh_token', response.data.refresh);\r\n\r\n            let jwt = localStorage.getItem('access_token');\r\n            let jwtData = jwt.split('.')[1];\r\n            let decodedJwtJsonData = window.atob(jwtData);\r\n            let decodedJwtData = JSON.parse(decodedJwtJsonData);\r\n\r\n            let email = decodedJwtData.user_email;\r\n            let role = email.split('@')[0];\r\n            localStorage.setItem('role', role);\r\n            this.props.onLogIn(true, role);\r\n\r\n            return response;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Ekran ogowania</h3>\r\n                <form className=\"form-group\" onSubmit={this.handleSubmit}>\r\n                    <label className=\"control-label\">Login:</label>    \r\n                    <input className=\"form-control\" name=\"email\" type=\"text\" value={this.state.email} onChange={this.handleChange}/>\r\n                    \r\n                    <label className=\"control-label\">Hasło:</label>\r\n                    <input className=\"form-control\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                    <br></br>\r\n                    <input className=\"btn btn-primary\" type=\"submit\" value=\"Zaloguj\"/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar';\r\nimport Statistics from './components/Statistics';\r\nimport Diagnostic from './components/Diagnostic';\r\nimport Porter from './components/Porter';\r\nimport Login from './components/Login';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      logIn: false,\r\n      role: 'non'\r\n      };\r\n    }\r\n\r\n  componentDidMount() {\r\n    this.setState({ logIn: false});\r\n  }\r\n\r\n  onLogIn = (status, type) => {\r\n    if (status) {\r\n      this.setState({\r\n        logIn: status,\r\n        role: type\r\n      });\r\n      this.forceUpdate();\r\n    }\r\n    else {\r\n      this.setState({\r\n        logIn: status,\r\n        role: type\r\n      });\r\n    }\r\n}\r\n\r\nonLogOut = () => {\r\n  this.setState({\r\n    logIn: false,\r\n    role: \"non\"\r\n  });\r\n}\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <NavBar isLooged={this.state.logIn} onLogOut={this.onLogOut}/>\r\n          <div className=\"row justify-content-around\">\r\n            <Switch>\r\n              <Route render={\r\n                ({match}) => {\r\n                  if(this.state.logIn) {\r\n                    if (this.state.role == 'analityk') {\r\n                      return (<Statistics\r\n                        labels={[\"Dzień 1\", \"Dzień 2\", \"Dzień 3\", \"Dzień 4\", \"Dzień 5\", \"Dzień 6\", \"Dzień 7\"]}\r\n                        numbers={[35, 48, 60, 54, 56, 83, 42]}\r\n                        type={\"D\"} />)\r\n                    }\r\n                    if (this.state.role == 'technik') {\r\n                      return (<Diagnostic/>)\r\n                    }\r\n                    if (this.state.role == 'portier') {\r\n                      return (<Porter/>)\r\n                    }\r\n                  }\r\n                  else {\r\n                    return (<Login onLogIn={this.onLogIn}/>);\r\n                  }\r\n                }\r\n              }/>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}